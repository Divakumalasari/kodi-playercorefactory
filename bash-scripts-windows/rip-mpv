#!/bin/bash

#+========================================================+#
# exit status, error codes and script usage                #
#+========================================================+#

SUCCESS=0     # success exit code
E_NOARGS=65   # no arguments passed to script
E_NOMATCH=66  # url not matched by regular expression

script_usage="Usage: $(basename "$0") [(http|https|rtmp|rtmpe)://example.com/video-url]"

#+========================================================+#
# + check if first argument is a url in a text file        #
# - or a url on the command line                           #
#+========================================================+#

if [[ "$1" =~ \.txt$ ]]; then # + text file passed as first argument to script
   videourl=$(cat "$1")       # - cat the text file to extract the url
else
   videourl="$1"              # url is on the command line
fi

#+========================================================+#
# + validate user input for first argument                 #
# - passed to script                                       #
# + check if 1 or 3 arguments are passed to script         #
# - validate user input and enable shell globbing          #
#+========================================================+#

first_arg_validated="^(http|https|rtmp|rtmpe)://*"    # matches: http|https|rtmp|rtmpe

if [[ $# -eq 1 ]]; then                               # + one argument is passed to the script
   if ! [[ $videourl =~ $first_arg_validated ]]; then # - if videourl doesnt match validation regular expression
      printf "%s\n%s\n" "'$videourl' invalid input" "$script_usage" # - display invalid user input with error message
      exit "$E_NOMATCH"                               # - exit with E_NOMATCH error code
   fi
else [[ $# -eq 0 ]]                                   # + no arguments are passed to the script
   printf "%s\n" "$script_usage"                      # - display script usage
   exit "$E_NOARGS"                                   # - exit with E_NOARGS error code
fi

shopt -s extglob # enable shell globbing 

#+========================================================+#
# case statement switch on pattern match                   #
#+========================================================+#

videofile="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)"
m3u8="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.m3u8"
videoqmark="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv|m3u8)?([^|])[a-zA-Z0-9=?&]*([^|])"
viduseragent="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv|m3u8)?([a-zA-Z0-9?\&=%*])*\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*([^&])"
useragentreferer="@(http|https)://[a-zA-Z0-9:0-9./?=_\&@%-]*\.@(mkv|mp4|avi|flv|m3u8)?([a-zA-Z0-9=?&]*)\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;\&@%+-]*\&[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*"
useref="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+-]*\&[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*"
refuseragent="@(http|https)://[a-zA-Z0-9:0-9./?=_-]*?(.m3u8)\|[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*\&[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+-]*"
xforward="@(http|https)://[a-zA-Z0-9./?=_@%-]*\.m3u8\|X-Forwarded-For=+([0-9])\.+([0-9])\.+([0-9])\.+([0-9])"
http="@(http|https)://[a-zA-Z0-9:0-9/.\&;,~*?%@_=-]*"
rtmp="@(rtmp|rtmpe)://[a-zA-Z0-9[:blank:]#%@!()_=:-/.\&;,~*?]*"
cookiem3u8="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.m3u8\?nltid=[a-zA-Z0-9\&%_*=]*"
cookiem3u8uagent="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.@(mkv|mp4|avi|flv|m3u8)?([a-zA-Z0-9/?\&=%.*_-])*\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*\&Cookie[a-zA-Z0-9=_]*"

#+========================================================+#
# grep inside url to extract strings                       #
#+========================================================+#

videofile_grep=$(printf "%s" "$videourl" | grep -Eo '(http|https)://[a-zA-Z0-9:0-9./?=_,@&%-]*\.(m3u8|mkv|mp4|avi|flv)?([a-zA-Z0-9?&=%*_-]*[^|])' | sed q) 
useragent=$(printf "%s" "$videourl" | grep -Eo 'u?User-a?Agent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*[^&]')
useragent2=$(printf "%s" "$videourl" | grep -Eo 'u?User-a?Agent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*[^&]' | sed 's/[uU]ser-[aA]gent=//g')
referer=$(printf "%s" "$videourl" | grep -Eo 'r?Referer=(http|https)(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*'| sed 's/[rR]eferer=//')
xforwardip=$(printf "%s" "$videourl" | grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')
cookieurl=$(printf "%s" "$videourl" | grep -Eo '[cC]ookie=[a-zA-Z0-9/&%_*~;=_[:blank:]]*' | sed 's/[cC]ookie=//')
cookienltid=$(printf "%s" "$videourl" | grep -Eo 'nltid=[a-zA-Z0-9&%_*=]*')
cookiedomain=$(printf "%s" "$videourl" | grep -Eo '(http|https)://[a-zA-Z0-9.-]*[^/]' | sed 's/^http\(\|s\):\/\///g')

#+========================================================+#
# + case statement with regular expression                 #
# - to execute mpv commands based on matching url          #
#+========================================================+#

case "$videourl" in
  $videofile) mpv --vo=direct3d "$videourl";;
  $m3u8) mpv --vo=direct3d "$videourl";;
  $cookiem3u8) mpv --vo=direct3d --http-header-fields="cookie: $cookienltid","path=/: $cookiedomain" "$videourl";;
  $videoqmark) mpv --vo=direct3d "$videourl";;
  $xforward) mpv --vo=direct3d --http-header-fields="X-Forwarded-For: $xforwardip" "$videofile_grep";;
  $useref) mpv --vo=direct3d --user-agent="$useragent" --referrer="$referer" "$videofile_grep";;
  $viduseragent) mpv --vo=direct3d --user-agent="$useragent" "$videofile_grep";;
  $useragentreferer) mpv --vo=direct3d --user-agent="$useragent" --referrer="$referer" "$videofile_grep";;
  $refuseragent) mpv --vo=direct3d --referrer="$referer" --user-agent="$useragent" "$videofile_grep";;
  $rtmp) rtmpdump -q -i "$videourl" | mpv --vo=direct3d -;;
  $cookiem3u8uagent) mpv --vo=direct3d --user-agent="$useragent2" \
  --http-header-fields="cookie: $cookieurl","path=/: $cookiedomain" "$videofile_grep";;
  $http) mpv --vo=direct3d "$videourl";;
  *) mpv --vo=direct3d "$videourl";;
esac 

shopt -u extglob # turn off shell globbing
exit "$SUCCESS" # exit status SUCCESS if script runs without errors

#!/bin/bash

#+========================================================+#
# exit status, error codes and script usage                #
#+========================================================+#

SUCCESS=0		# success exit code
E_NOARGS=65		# no arguments passed to script
E_NOMATCH=66	# url not matched by regular expression

script_usage="Usage: $(basename "$0") [(http|https|rtmp|rtmpe)://example.com/video-url]"

#+========================================================+#
# + check if first argument is a url in a text file        #
# - or a url on the command line                           #
#+========================================================+#

if [[ "$1" =~ \.txt$ ]]; then # + text file passed as first argument to script
	videourl=$(cat "$1")       # - cat the text file to extract the url
else
	videourl="$1"              # url is on the command line
fi

#+========================================================+#
# + validate user input for first argument                 #
# - passed to script	                                      #
# + check if 1 or 3 arguments are passed to script         #
# - validate user input and enable shell globbing          #
#+========================================================+#

first_arg_validated="^(http|https|rtmp|rtmpe)://*"    # matches: http|https|rtmp|rtmpe

if [[ $# -eq 1 ]]; then                               # + one argument is passed to the script
	if ! [[ $videourl =~ $first_arg_validated ]]; then # - if videourl doesnt match validation regular expression
		printf "%s\n%s\n" "'$videourl' invalid input" "$script_usage" # - display invalid user input with error message
		exit "$E_NOMATCH"                               # - exit with E_NOMATCH error code
	fi
else [[ $# -eq 0 ]]                                   # + no arguments are passed to the script
   printf "%s\n" "$script_usage"                      # - display script usage
	exit "$E_NOARGS"                                   # - exit with E_NOARGS error code
fi

shopt -s extglob # enable shell globbing 

#+========================================================+#
# case statement switch on pattern match                   #
#+========================================================+#

videofile="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)"
m3u8="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.m3u8"
videoqmark="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv|m3u8)?([^|])[a-zA-Z0-9=?&]*([^|])"
viduseragent="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv|m3u8)?([a-zA-Z0-9?\&=%*])*\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*([^&])"
useragentreferer="@(http|https)://[a-zA-Z0-9:0-9./?=_\&@%-]*\.@(mkv|mp4|avi|flv|m3u8)?([a-zA-Z0-9=?&]*)\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;\&@%+-]*\&[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*"
useref="@(http|https)://[a-zA-Z0-9:0-9./?=_@%-]*\.@(mkv|mp4|avi|flv)\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+-]*\&[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*"
refuseragent="@(http|https)://[a-zA-Z0-9:0-9./?=_-]*?(.m3u8)\|[rR]eferer=@(http|https)@(://|%3A%2F%2F)[a-zA-Z%0-9./?=_-]*\&[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+-]*"
xforward="@(http|https)://[a-zA-Z0-9./?=_@%-]*\.m3u8\|X-Forwarded-For=+([0-9])\.+([0-9])\.+([0-9])\.+([0-9])"
http="@(http|https)://[a-zA-Z0-9:0-9/.\&;,~*?%@_=-]*"
rtmp="@(rtmp|rtmpe)://[a-zA-Z0-9[:blank:]#%@!()_=:-/.\&;,~*?]*"
cookiem3u8="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.m3u8\?nltid=[a-zA-Z0-9\&%_*=]*"
cookiem3u8uagent="@(http|https)://[a-zA-Z0-9:0-9./?=_,@\&%-]*\.@(mkv|mp4|avi|flv|m3u8)?([a-zA-Z0-9/?\&=%.*_-])*\|[uU]ser-[aA]gent=[a-zA-Z0-9/.()[:blank:],:;%+_-]*\&Cookie[a-zA-Z0-9=_]*"

#+========================================================+#
# + case statement with regular expression                 #
# - to show matching url                                   #
#+========================================================+#

case "$videourl" in
    $videofile) printf "%s\n%s\n" 'url matches: $videofile bash pattern' "url checked: '$videourl'";;
    $m3u8) printf "%s\n%s\n" 'url matches: $m3u8 bash pattern' "url checked: '$videourl'";;
    $cookiem3u8) printf "%s\n%s\n" 'url matches: $cookiem3u8 bash pattern' "url checked: '$videourl'";;
    $videoqmark) printf "%s\n%s\n" 'url matches: $videoqmark bash pattern' "url checked: '$videourl'";;
    $xforward) printf "%s\n%s\n" 'url matches: $xforward bash pattern' "url checked: '$videourl'";;
    $useref) printf "%s\n%s\n" 'url matches: $useref bash pattern' "url checked: '$videourl'";;
    $viduseragent) printf "%s\n%s\n" 'url matches: $viduseragent bash pattern' "url checked: '$videourl'";;
    $useragentreferer) printf "%s\n%s\n" 'url matches: $useragentreferer bash pattern' "url checked: '$videourl'";;
    $refuseragent) printf "%s\n%s\n" 'url matches: $refuseragent bash pattern' "url checked: '$videourl'";;
    $rtmp) printf "%s\n%s\n" 'url matches: $rtmp bash pattern' "url checked: '$videourl'";;
    $cookiem3u8uagent) printf "%s\n%s\n" 'url matches: $cookiem3u8uagent bash pattern' "url checked: '$videourl'";;
    $http) printf "%s\n%s\n" 'url matches: $http bash pattern' "url checked: '$videourl'";;
    *) printf "%s\n%s\n" 'url matches: * bash pattern' "url checked: '$videourl'";;
esac 

shopt -u extglob # turn off shell globbing
exit "$SUCCESS" # exit status SUCCESS if script runs without errors
